---
import Layout from '../../layouts/Layout.astro';

const title = 'Sustaining Open Source Software | SocioTechnica';
---

<Layout 
  title="Sustaining Open Source Software"
  description="Open source software projects have become akin to public utilities, utilized by more than 90% of software applications."
  url="https://sociotechnica.org/open-source"
  image="https://sociotechnica.org/sociotechnica-social.png"
>
  <h1 class="font-serif text-4xl mb-4">Sustaining Open Source Software</h1>

  <div class="italic mb-4 text-sm text-gray-600">Updated July 2022</div>

  <div class="p-5 mb-5 border-2 bg-slate-100">
    <p class="italic text-neutral-600">
      <b class="font-semibold">Work in Progress:</b> These are a set of working notes about the problem
      of creating sustainable ecosystems for resourcing the creation and maintenance of software systems.
    </p>
  </div>

  <article class="prose lg:prose-md">
    <p>
      Open source software projects have become akin to public utilities, utilized by more than 90% of
      software applications. But these projects are often fragile, passing along security
      vulnerabilities, suffering "bit rot," and abandonment by maintainers.
    </p>
    <p>
      We believe that the root cause is a lack of project <i>sustainability</i>&mdash;stakeholders
      lack the necessary resources (time, money, and skill) to adequately steward the project for the
      long-term.
    </p>

    <h3>Problem Statement: An Outline</h3>
    <ul class="">
      <li class="mb-0">
        Software is eating the world, which is to say, software is becoming an ever-increasing part of
        everyday life.
        <ul>
          <li>
            Software has become "core infrastructure" that we rely on like we rely on running water
            and electricity.
          </li>
        </ul>
      </li>
      <li>
        Software exists in several layers:
        <ul>
          <li>Protocols</li>
          <li>Languages</li>
          <li>Libraries</li>
          <li>Platforms</li>
          <li>Products</li>
          <li>Services</li>
        </ul>
      </li>
      <li>
        Each layer is built on the layer above it, with some interesting edge cases
        <ul><li>Like any taxonomy, this taxonomy is imperfect.</li></ul>
      </li>
      <li>
        There are strong economic models that currently exist for building Platforms, Products, and
        Services.
        <ul><li>Easy to make money building these things.</li></ul>
      </li>
      <li>
        There is no strong economic model for sustainably resourcing the development of Libraries and
        Protocols.
        <ul>
          <li>Sustainability and Maintaining Systems</li>
        </ul>
      </li>
      <li>
        Problem: Platforms, Products, and Services are built atop Libraries and Protocols.
        <ul>
          <li>
            This creates an "unsteady foundation" where Libraries and Protocols are not adequately
            supported, causing the upper layers to fail.
          </li>
          <li>
            There is also tremendous waste in building the upper layers since Libraries and Protocols
            are not being optimally developed and maintained, causing churn-having to be rebuilt due
            to abandonment.
          </li>
          <li>
            Tremendous leverage at lower layers! Yet no strong economic model for developing them, so
            that leverage is wasted.
            <ul>
              <li>
                Each layer has potentially an order of magnitude of impact to the layer above it.
                <ul>
                  <li>
                    a single protocol can support 10x as many libraries. a single library can support
                    10x as many platforms, and so forth.
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>
        Traditional solutions to this problem have involved licensing the software itself, which
        assumes that the point of leverage is literally the source code that is produced.
        <ul>
          <li>
            This is a naive and unhelpful view of code/programs. The source only is effective within
            the context of a living system. Extracted from the system it has little to no value.
          </li>
          <li>The bits are not the value!</li>
        </ul>
      </li>
      <li>
        It turns out, the rival, non-fungible good is actually <i>developer time</i> to build and
        maintain open source software!
        <ul>
          <li>
            We should focus on models that properly incentivize the deployment of <i>developer time</i
            >.
          </li>
        </ul>
      </li>
      <li>
        The other challenge is <i>coordination</i>.
        <ul>
          <li>
            Occasionally a library is maintained principally by a single maintainer with little
            assistance from the community
          </li>
          <li>
            Most often libraries and protocols are actually a network or community who each play
            different roles in the maintenance and extension of that resource.
          </li>
          <li>
            The mechanisms we have for coordinating groups of developers and community members are
            immature and poorly understood.
            <ul>
              <li>
                The most obvious organizing mechanism for the creation of software is the corporation.
                However, for the sake of resiliency and anti-fragility, it's preferable to have
                developers from multiple organizations all working on the project, together.
              </li>
              <li>
                Another mechanism is the "core maintainer group." This mechanism is widely used, but
                also poorly documented and understood.
              </li>
              <li>
                A final mechanism frequently used is the open source foundation. I don't know that
                much about how foundations work, how successful they have been, etc.
              </li>
            </ul>
          </li>
          <li>
            An emerging model worth exploring is the Networked Organization, which can be thought of
            as applying some of the principles of decentralization a la software to the corporation
            itself.
          </li>
        </ul>
      </li>
    </ul>

    <h2 class="">A Way Forward: Maximize the Impact of Developer Hours</h2>
    <p>
      We believe that the <a href="https://en.wikipedia.org/wiki/Rivalry_(economics)"
        >rivalrous good</a
      > in the creation and maintenance of open source software is not the software, i.e. the bits, but
      rather the production process itself. That leads to a tangible goal:
    </p>
    <p class="text-xl text-center ml-10 mr-10 italic text-neutral-700">
      Pioneer new economic systems that maximize the impact of developer hours in the production of
      open source software.
    </p>
    <p class="">
      At a high level, we are interested in solutions that explore one of four strategies:
    </p>
    <ol class="leading-none">
      <li>
        <p>Increase the total number of available hours.</p>
      </li>
      <li>
        <p>Increase the efficiency of existing hours.</p>
      </li>
      <li>
        <p>Eliminate wasteful hours.</p>
      </li>
      <li>
        <p>Redirect hours to higher priority tasks and projects.</p>
      </li>
    </ol>
  </article>
</Layout>